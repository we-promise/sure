<%# locals: (simplefin_item:) %>

<%= tag.div id: dom_id(simplefin_item) do %>
  <details open class="group bg-container p-4 shadow-border-xs rounded-xl">
    <summary class="flex items-center justify-between gap-2 focus-visible:outline-hidden">
      <div class="flex items-center gap-2">
        <%= icon "chevron-right", class: "group-open:transform group-open:rotate-90" %>

        <div class="flex items-center justify-center h-8 w-8 bg-success/10 rounded-full">
          <% if simplefin_item.logo.attached? %>
            <%= image_tag simplefin_item.logo, class: "rounded-full h-full w-full", loading: "lazy" %>
          <% else %>
            <div class="flex items-center justify-center">
              <%= tag.p simplefin_item.name.first.upcase, class: "text-success text-xs font-medium" %>
            </div>
          <% end %>
        </div>

        <div class="pl-1 text-sm">
          <div class="flex items-center gap-2">
            <%= tag.p simplefin_item.name, class: "font-medium text-primary" %>
            <% if simplefin_item.scheduled_for_deletion? %>
              <p class="text-destructive text-sm animate-pulse"><%= t(".deletion_in_progress") %></p>
            <% end %>
          </div>
          <% if simplefin_item.accounts.any? %>
            <p class="text-xs text-secondary">
              <%= simplefin_item.institution_summary %>
            </p>
            <%# Extra inline badges from latest sync stats %>
            <% stats = (defined?(sync_stats) && sync_stats) || (@simplefin_sync_stats_map && @simplefin_sync_stats_map[simplefin_item.id]) || {} %>
            <% if stats.present? %>
              <div class="flex items-center gap-2 mt-1">
                <% if stats["unlinked_accounts"].to_i > 0 %>
                  <%= render DS::Tooltip.new(text: "Accounts need setup", icon: "link-2", size: "sm") %>
                  <span class="text-xs text-secondary">Unlinked: <%= stats["unlinked_accounts"].to_i %></span>
                <% end %>

                <% if stats["accounts_skipped"].to_i > 0 %>
                  <%= render DS::Tooltip.new(text: "Some accounts were skipped due to errors during sync", icon: "alert-triangle", size: "sm", color: "warning") %>
                  <span class="text-xs text-warning">Skipped: <%= stats["accounts_skipped"].to_i %></span>
                <% end %>

                <% if stats["rate_limited"].present? || stats["rate_limited_at"].present? %>
                  <% ts = stats["rate_limited_at"] %>
                  <% ago = (ts.present? ? (time_ago_in_words(Time.parse(ts)) rescue nil) : nil) %>
                  <%= render DS::Tooltip.new(
                        text: (ago ? "Rate limited (" + ago + " ago)" : "Rate limited recently"),
                        icon: "clock",
                        size: "sm",
                        color: "warning"
                      ) %>
                <% end %>

                <% if stats["total_errors"].to_i > 0 || (stats["errors"].is_a?(Array) && stats["errors"].any?) %>
                  <% tooltip_text = simplefin_error_tooltip(stats) %>
                  <% if tooltip_text.present? %>
                    <%= render DS::Tooltip.new(text: tooltip_text, icon: "alert-octagon", size: "sm", color: "warning") %>
                  <% end %>
                  <%= render DS::Link.new(text: "View errors", icon: "alert-octagon", variant: "secondary", href: errors_simplefin_item_path(simplefin_item), frame: "modal") %>
                  <%= render DS::Link.new(text: "Link existing accounts", icon: "link-2", variant: "secondary", href: manual_relink_simplefin_item_path(simplefin_item), frame: "modal") %>
                <% end %>

                <% if stats["total_accounts"].to_i > 0 %>
                  <span class="text-xs text-secondary">Total: <%= stats["total_accounts"].to_i %></span>
                <% end %>
              </div>
            <% end %>
          <% end %>
          <% if simplefin_item.syncing? %>
            <div class="text-secondary flex items-center gap-1">
              <%= icon "loader", size: "sm", class: "animate-spin" %>
              <%= tag.span t(".syncing") %>
            </div>
          <% elsif simplefin_item.requires_update? %>
            <div class="text-warning flex items-center gap-1">
              <%= icon "alert-triangle", size: "sm", color: "warning" %>
              <%= tag.span t(".requires_update") %>
            </div>
          <% elsif simplefin_item.rate_limited_message.present? %>
            <div class="text-warning flex items-center gap-1">
              <%= icon "clock", size: "sm", color: "warning" %>
              <%= tag.span simplefin_item.rate_limited_message %>
            </div>
          <% elsif simplefin_item.sync_error.present? %>
            <div class="text-secondary flex items-center gap-1">
              <%= render DS::Tooltip.new(text: simplefin_item.sync_error, icon: "alert-circle", size: "sm", color: "destructive") %>
              <%= tag.span t(".error"), class: "text-destructive" %>
            </div>
          <% else %>
            <p class="text-secondary">
              <% if simplefin_item.last_synced_at %>
                <% if simplefin_item.sync_status_summary %>
                  <%= t(".status_with_summary", timestamp: time_ago_in_words(simplefin_item.last_synced_at), summary: simplefin_item.sync_status_summary) %>
                <% else %>
                  <%= t(".status", timestamp: time_ago_in_words(simplefin_item.last_synced_at)) %>
                <% end %>
              <% else %>
                <%= t(".status_never") %>
              <% end %>
            </p>
          <% end %>
        </div>
      </div>

      <div class="flex items-center gap-2">
        <% if simplefin_item.requires_update? %>
          <%= render DS::Link.new(
            text: t(".update"),
            icon: "refresh-cw",
            variant: "secondary",
            href: edit_simplefin_item_path(simplefin_item),
            frame: "modal"
          ) %>
        <% elsif Rails.env.development? %>
          <%= icon(
            "refresh-cw",
            as_button: true,
            href: sync_simplefin_item_path(simplefin_item)
          ) %>
        <% end %>

        <%# Show only when there are manual accounts to link %>
        <% has_unlinked = (defined?(has_unlinked) ? has_unlinked : (@simplefin_has_unlinked_map && @simplefin_has_unlinked_map[simplefin_item.id])) %>
        <% if has_unlinked %>
          <%= render DS::Link.new(
            text: "Link existing accounts",
            icon: "link-2",
            variant: "secondary",
            href: manual_relink_simplefin_item_path(simplefin_item),
            frame: "modal"
          ) %>
        <% end %>

        <%= render DS::Menu.new do |menu| %>
          <% menu.with_item(
            variant: "button",
            text: t(".delete"),
            icon: "trash-2",
            href: simplefin_item_path(simplefin_item),
            method: :delete,
            confirm: CustomConfirm.for_resource_deletion(simplefin_item.name, high_severity: true)
          ) %>
        <% end %>
      </div>
    </summary>

    <% unless simplefin_item.scheduled_for_deletion? %>
      <div class="space-y-4 mt-4">
        <% if simplefin_item.accounts.any? %>
          <%= render "accounts/index/account_groups", accounts: simplefin_item.accounts %>
        <% end %>

        <%# Sync summary (collapsible) %>
        <% if (latest_sync = simplefin_item.syncs.ordered.first).present? %>
          <% stats = latest_sync.sync_stats || {} %>
          <details class="group bg-surface rounded-lg border border-surface-inset/50">
            <summary class="flex items-center justify-between gap-2 p-3 cursor-pointer">
              <div class="flex items-center gap-2">
                <%= icon "chevron-right", class: "group-open:transform group-open:rotate-90" %>
                <span class="text-sm text-primary font-medium">Sync summary</span>
              </div>
              <div class="flex items-center gap-2 text-xs text-secondary">
                <% if simplefin_item.last_synced_at %>
                  <span>Last sync: <%= time_ago_in_words(simplefin_item.last_synced_at) %> ago</span>
                <% end %>
              </div>
            </summary>
            <div class="p-3 text-sm text-secondary grid grid-cols-1 md:grid-cols-2 gap-3">
              <div>
                <h4 class="text-primary font-medium mb-1">Accounts</h4>
                <div class="flex items-center gap-3">
                  <span>Total: <%= stats["total_accounts"].to_i %></span>
                  <span>Linked: <%= stats["linked_accounts"].to_i %></span>
                  <span>Unlinked: <%= stats["unlinked_accounts"].to_i %></span>
                  <% institutions = simplefin_item.connected_institutions %>
                  <span>Institutions: <%= institutions.size %></span>
                </div>
              </div>
              <div>
                <h4 class="text-primary font-medium mb-1">Transactions</h4>
                <div class="flex items-center gap-3">
                  <span>Seen: <%= stats["tx_seen"].to_i %></span>
                  <span>Imported: <%= stats["tx_imported"].to_i %></span>
                  <span>Updated: <%= stats["tx_updated"].to_i %></span>
                  <span>Skipped: <%= stats["tx_skipped"].to_i %></span>
                </div>
              </div>
              <div>
                <h4 class="text-primary font-medium mb-1">Holdings</h4>
                <div class="flex items-center gap-3">
                  <span>Processed: <%= stats["holdings_processed"].to_i %></span>
                </div>
              </div>
              <div>
                <h4 class="text-primary font-medium mb-1">Health</h4>
                <div class="flex items-center gap-3">
                  <% if stats["rate_limited"].present? || stats["rate_limited_at"].present? %>
                    <% ts = stats["rate_limited_at"] %>
                    <% ago = (ts.present? ? (time_ago_in_words(Time.parse(ts)) rescue nil) : nil) %>
                    <span class="text-warning">Rate limited <%= ago ? "(#{ago} ago)" : "recently" %></span>
                  <% end %>
                  <% total_errors = stats["total_errors"].to_i %>
                  <% if total_errors > 0 %>
                    <span class="text-destructive">Errors: <%= total_errors %></span>
                  <% else %>
                    <span>Errors: 0</span>
                  <% end %>
                </div>
              </div>
            </div>
          </details>
        <% end %>

        <%# Compute unlinked SimpleFin accounts (no legacy account and no AccountProvider link) %>
        <% unlinked_count = simplefin_item.simplefin_accounts
             .left_joins(:account, :account_provider)
             .where(accounts: { id: nil }, account_providers: { id: nil })
             .count %>

        <% if unlinked_count > 0 %>
          <div class="p-4 flex flex-col gap-3 items-center justify-center">
            <p class="text-primary font-medium text-sm"><%= t(".setup_needed") %></p>
            <p class="text-secondary text-sm"><%= t(".setup_description") %></p>
            <%= render DS::Link.new(
              text: t(".setup_action"),
              icon: "settings",
              variant: "primary",
              href: setup_accounts_simplefin_item_path(simplefin_item)
            ) %>
          </div>
        <% elsif simplefin_item.accounts.empty? %>
          <div class="p-4 flex flex-col gap-3 items-center justify-center">
            <p class="text-primary font-medium text-sm"><%= t(".no_accounts_title") %></p>
            <p class="text-secondary text-sm"><%= t(".no_accounts_description") %></p>
          </div>
        <% end %>
      </div>
    <% end %>
  </details>
<% end %>
